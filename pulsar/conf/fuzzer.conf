
[network]

host = 10.0.1.1
port = 36666 
timeout = 2.0
bsize = 8192

[cuckoo]

active = 1
path = /home/hgascon/cuckoo

[fuzzer]

# Select the role of the fuzzer: client or server

role = client

# Select the mode of fuzzing rand_overflow, const_overflow, int_overflow, non_utf8

fuzzermode = const_overflow

# If True, the fuzzer will ask to select the next template instead of selecting
# according to probability of ocurrence. Also, if the template can be fuzzed,
# the fuzzer will ask if the template should be fuzzed or not. If False,
# template selection will be based on probabilty of ocurrence and will be
# always fuzzed if fuzzable.

interactive = False

# Length of the stream to be used for overflowing inputs.

fuzzlength = 15000

# Time in seconds for the fuzzer to wait until the communication has been
# interrupted with the other end. In some cases if the management of the
# virtual machine if slow, it can take some time for the sandbox to write the
# ouptut state of a crashed sample.  This timer assures that when reading the
# result, the value is already there.

terminationtimer = 15

# Set the type of transition used when selecting the next
# states in the markov model:
#    MODE_MOST_PROBABLE_TRANSITION = 0
#    MODE_LEAST_PROBABLE_TRANSITION = 1
#    MODE_RANDOM_TRANSITION = 2
#    MODE_FUZZING_TRANSITION = 3

transitionmode = 3

# Activate the matching of templates according to similarity. This way, a
# transition is forced after receiving a message even if no template is exactly
# matched. The received message is matched to the closest template.  This helps
# the model transitioning to a deeper state.

simsearch = True

# In a fuzzing state, allow selecting templates with no
# fields to trigger a transition to a deeper state.

nofieldstemplates = True
